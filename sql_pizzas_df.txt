1) Retrive the total number of orders placed.

select count(order_id)  as total_orders from orders;

2) calculate the total revenue generated from pizza sales. 

select  round(sum(order_details.quantity * pizzas.price),2) as total_sales 
from order_details join pizzas
on pizzas.pizza_id = order_details.pizza_id;

3) Identify the highest-priced pizza

select pizza_types.name, pizzas.price
from pizza_types join pizzas 
on pizza_types.pizza_type_id = pizzas.pizza_type_id
order by pizzas.price desc
limit 1;

4) identify the most common pizza size ordered.

select quantity, count(order_details_id)
from order_details  group by quantity;

5) Identufy the most common pizza size ordered.

select pizzas.size, count(order_details.order_details_id) as total_size 
from pizzas join order_details
on pizzas.pizza_id = order_details.pizza_id
group by pizzas.size order by total_size desc;

6) list the top 5  most ordered pizza types along with their quantities.

select pizza_types.name, 
sum(order_details.quantity) as total  
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.name 
order by total desc
limit 5;

7) join the necessary tables to find the total quatity of each pizza category ordered.

select pizza_types.category,
sum(order_details.quantity) as total 
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details 
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category 
order by total  desc;

8) Determine the distribution of orders by hour of the day 

select hour(order_time) as hours, count(order_id) as distribution from orders
group by hour(order_time);

9) join relevent tables to find the category-wise distrubution of pizzas.

select category, count(name) as total from pizza_types
group by category;

10) Group the orders by date and calculate the average number of pizzas ordered per day.

select round(avg(total),0) as avg_quamtity from 
(select orders.order_date, sum(order_details.quantity) as total 
from orders join order_details
on orders.order_id = order_details.order_id
group by orders.order_date) as total_quantity ;

11) Determine the top 3 most orderd pizza types based on revenue.

select pizza_types.name,
round(sum(order_details.quantity * pizzas.price),0) as revenue
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details 
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.name
order by revenue desc
limit 3;

12) calculate the percentage contribution of each pizza type to total revenu 

select pizza_types.category,
round((sum(order_details.quantity * pizzas.price)  / (select round(sum(order_details.quantity*pizzas.price),0)
from order_details join pizzas
on pizzas.pizza_id = order_details.pizza_id) )*100,2) as revenue 
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category
order by revenue desc;

13) analyze the cumulative revenue generated over time.

select order_date,
sum(revenue) over(order by order_date) as cum_revenue from
(select orders.order_date,
round(sum(order_details.quantity * pizzas.price),2) as revenue 
from order_details join pizzas
on order_details.pizza_id = pizzas.pizza_id
join orders
on orders.order_id = order_details.order_id
group by orders.order_date) as sales;

 14) Determine the top 3 most ordered pizza type based on revenue for each pizza category.

select name, revenue from
(select category, name, revenue,
rank() over(partition by category order by revenue desc) as total from 
(select pizza_types.name, pizza_types.category,
sum(order_details.quantity * pizzas.price) as revenue
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.name, pizza_types.category) as B) as C 
where total <= 3;